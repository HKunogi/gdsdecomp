[gd_resource type="CodeHighlighter" format=3 uid="uid://bvupo2dvc3odg"]

[resource]
resource_local_to_scene = true
number_color = Color(0.631373, 1, 0.878431, 1)
symbol_color = Color(0.670588, 0.788235, 1, 1)
function_color = Color(0.4, 0.901961, 1, 1)
member_variable_color = Color(0.737255, 0.878431, 1, 1)
keyword_colors = {
"abs": Color(0.64, 0.64, 0.96, 1),
"acos": Color(0.64, 0.64, 0.96, 1),
"acosh": Color(0.64, 0.64, 0.96, 1),
"all": Color(0.64, 0.64, 0.96, 1),
"any": Color(0.64, 0.64, 0.96, 1),
"asin": Color(0.64, 0.64, 0.96, 1),
"asinh": Color(0.64, 0.64, 0.96, 1),
"atan": Color(0.64, 0.64, 0.96, 1),
"atanh": Color(0.64, 0.64, 0.96, 1),
"bitCount": Color(0.64, 0.64, 0.96, 1),
"bitfieldExtract": Color(0.64, 0.64, 0.96, 1),
"bitfieldInsert": Color(0.64, 0.64, 0.96, 1),
"bitfieldReverse": Color(0.64, 0.64, 0.96, 1),
"bool": Color(1, 0.440001, 0.52, 1),
"break": Color(1, 0.55, 0.8, 1),
"bvec2": Color(1, 0.440001, 0.52, 1),
"bvec3": Color(1, 0.440001, 0.52, 1),
"bvec4": Color(1, 0.440001, 0.52, 1),
"case": Color(1, 0.55, 0.8, 1),
"ceil": Color(0.64, 0.64, 0.96, 1),
"clamp": Color(0.64, 0.64, 0.96, 1),
"const": Color(1, 0.44, 0.52, 1),
"continue": Color(1, 0.55, 0.8, 1),
"cos": Color(0.64, 0.64, 0.96, 1),
"cosh": Color(0.64, 0.64, 0.96, 1),
"cross": Color(0.64, 0.64, 0.96, 1),
"dFdx": Color(0.64, 0.64, 0.96, 1),
"dFdxCoarse": Color(0.64, 0.64, 0.96, 1),
"dFdxFine": Color(0.64, 0.64, 0.96, 1),
"dFdy": Color(0.64, 0.64, 0.96, 1),
"dFdyCoarse": Color(0.64, 0.64, 0.96, 1),
"dFdyFine": Color(0.64, 0.64, 0.96, 1),
"default": Color(1, 0.55, 0.8, 1),
"degrees": Color(0.64, 0.64, 0.96, 1),
"determinant": Color(0.64, 0.64, 0.96, 1),
"distance": Color(0.64, 0.64, 0.96, 1),
"do": Color(1, 0.55, 0.8, 1),
"dot": Color(0.64, 0.64, 0.96, 1),
"else": Color(1, 0.55, 0.8, 1),
"equal": Color(0.64, 0.64, 0.96, 1),
"exp": Color(0.64, 0.64, 0.96, 1),
"exp2": Color(0.64, 0.64, 0.96, 1),
"faceforward": Color(0.64, 0.64, 0.96, 1),
"false": Color(1, 0.44, 0.52, 1),
"filter_linear": Color(1, 0.44, 0.52, 1),
"filter_linear_mipmap": Color(1, 0.44, 0.52, 1),
"filter_linear_mipmap_anisotropic": Color(1, 0.44, 0.52, 1),
"filter_nearest": Color(1, 0.44, 0.52, 1),
"filter_nearest_mipmap": Color(1, 0.44, 0.52, 1),
"filter_nearest_mipmap_anisotropic": Color(1, 0.44, 0.52, 1),
"findLSB": Color(0.64, 0.64, 0.96, 1),
"findMSB": Color(0.64, 0.64, 0.96, 1),
"flat": Color(1, 0.44, 0.52, 1),
"float": Color(1, 0.440001, 0.52, 1),
"floatBitsToInt": Color(0.64, 0.64, 0.96, 1),
"floatBitsToUint": Color(0.64, 0.64, 0.96, 1),
"floor": Color(0.64, 0.64, 0.96, 1),
"fma": Color(0.64, 0.64, 0.96, 1),
"fog": Color(1, 0.44, 0.52, 1),
"for": Color(1, 0.55, 0.8, 1),
"fract": Color(0.64, 0.64, 0.96, 1),
"frexp": Color(0.64, 0.64, 0.96, 1),
"fwidth": Color(0.64, 0.64, 0.96, 1),
"fwidthCoarse": Color(0.64, 0.64, 0.96, 1),
"fwidthFine": Color(0.64, 0.64, 0.96, 1),
"global": Color(1, 0.44, 0.52, 1),
"greaterThan": Color(0.64, 0.64, 0.96, 1),
"greaterThanEqual": Color(0.64, 0.64, 0.96, 1),
"group_uniforms": Color(1, 0.44, 0.52, 1),
"highp": Color(1, 0.44, 0.52, 1),
"hint_anisotropy": Color(1, 0.44, 0.52, 1),
"hint_default_black": Color(1, 0.44, 0.52, 1),
"hint_default_transparent": Color(1, 0.44, 0.52, 1),
"hint_default_white": Color(1, 0.44, 0.52, 1),
"hint_depth_texture": Color(1, 0.44, 0.52, 1),
"hint_enum": Color(1, 0.44, 0.52, 1),
"hint_normal": Color(1, 0.44, 0.52, 1),
"hint_normal_roughness_texture": Color(1, 0.44, 0.52, 1),
"hint_range": Color(1, 0.44, 0.52, 1),
"hint_roughness_a": Color(1, 0.44, 0.52, 1),
"hint_roughness_b": Color(1, 0.44, 0.52, 1),
"hint_roughness_g": Color(1, 0.44, 0.52, 1),
"hint_roughness_gray": Color(1, 0.44, 0.52, 1),
"hint_roughness_normal": Color(1, 0.44, 0.52, 1),
"hint_roughness_r": Color(1, 0.44, 0.52, 1),
"hint_screen_texture": Color(1, 0.44, 0.52, 1),
"if": Color(1, 0.55, 0.8, 1),
"imulExtended": Color(0.64, 0.64, 0.96, 1),
"in": Color(1, 0.44, 0.52, 1),
"inout": Color(1, 0.44, 0.52, 1),
"instance": Color(1, 0.44, 0.52, 1),
"instance_index": Color(1, 0.44, 0.52, 1),
"int": Color(1, 0.440001, 0.52, 1),
"intBitsToFloat": Color(0.64, 0.64, 0.96, 1),
"inverse": Color(0.64, 0.64, 0.96, 1),
"inversesqrt": Color(0.64, 0.64, 0.96, 1),
"isampler2D": Color(1, 0.440001, 0.52, 1),
"isampler2DArray": Color(1, 0.440001, 0.52, 1),
"isampler3D": Color(1, 0.440001, 0.52, 1),
"isinf": Color(0.64, 0.64, 0.96, 1),
"isnan": Color(0.64, 0.64, 0.96, 1),
"ivec2": Color(1, 0.440001, 0.52, 1),
"ivec3": Color(1, 0.440001, 0.52, 1),
"ivec4": Color(1, 0.440001, 0.52, 1),
"ldexp": Color(0.64, 0.64, 0.96, 1),
"length": Color(0.64, 0.64, 0.96, 1),
"lessThan": Color(0.64, 0.64, 0.96, 1),
"lessThanEqual": Color(0.64, 0.64, 0.96, 1),
"log": Color(0.64, 0.64, 0.96, 1),
"log2": Color(0.64, 0.64, 0.96, 1),
"lowp": Color(1, 0.44, 0.52, 1),
"mat2": Color(1, 0.440001, 0.52, 1),
"mat3": Color(1, 0.440001, 0.52, 1),
"mat4": Color(1, 0.440001, 0.52, 1),
"matrixCompMult": Color(0.64, 0.64, 0.96, 1),
"max": Color(0.64, 0.64, 0.96, 1),
"mediump": Color(1, 0.44, 0.52, 1),
"min": Color(0.64, 0.64, 0.96, 1),
"mix": Color(0.64, 0.64, 0.96, 1),
"mod": Color(0.64, 0.64, 0.96, 1),
"modf": Color(0.64, 0.64, 0.96, 1),
"normalize": Color(0.64, 0.64, 0.96, 1),
"not": Color(0.64, 0.64, 0.96, 1),
"notEqual": Color(0.64, 0.64, 0.96, 1),
"out": Color(1, 0.44, 0.52, 1),
"outerProduct": Color(0.64, 0.64, 0.96, 1),
"packHalf2x16": Color(0.64, 0.64, 0.96, 1),
"packSnorm2x16": Color(0.64, 0.64, 0.96, 1),
"packSnorm4x8": Color(0.64, 0.64, 0.96, 1),
"packUnorm2x16": Color(0.64, 0.64, 0.96, 1),
"packUnorm4x8": Color(0.64, 0.64, 0.96, 1),
"pow": Color(0.64, 0.64, 0.96, 1),
"radians": Color(0.64, 0.64, 0.96, 1),
"reflect": Color(0.64, 0.64, 0.96, 1),
"refract": Color(0.64, 0.64, 0.96, 1),
"render_mode": Color(1, 0.44, 0.52, 1),
"repeat_disable": Color(1, 0.44, 0.52, 1),
"repeat_enable": Color(1, 0.44, 0.52, 1),
"return": Color(1, 0.55, 0.8, 1),
"round": Color(0.64, 0.64, 0.96, 1),
"roundEven": Color(0.64, 0.64, 0.96, 1),
"sampler2D": Color(1, 0.440001, 0.52, 1),
"sampler2DArray": Color(1, 0.440001, 0.52, 1),
"sampler3D": Color(1, 0.440001, 0.52, 1),
"samplerCube": Color(1, 0.440001, 0.52, 1),
"samplerCubeArray": Color(1, 0.440001, 0.52, 1),
"samplerExternalOES": Color(1, 0.440001, 0.52, 1),
"shader_type": Color(1, 0.44, 0.52, 1),
"sign": Color(0.64, 0.64, 0.96, 1),
"sin": Color(0.64, 0.64, 0.96, 1),
"sinh": Color(0.64, 0.64, 0.96, 1),
"smooth": Color(1, 0.44, 0.52, 1),
"smoothstep": Color(0.64, 0.64, 0.96, 1),
"source_color": Color(1, 0.44, 0.52, 1),
"sqrt": Color(0.64, 0.64, 0.96, 1),
"step": Color(0.64, 0.64, 0.96, 1),
"struct": Color(1, 0.44, 0.52, 1),
"switch": Color(1, 0.55, 0.8, 1),
"tan": Color(0.64, 0.64, 0.96, 1),
"tanh": Color(0.64, 0.64, 0.96, 1),
"texelFetch": Color(0.64, 0.64, 0.96, 1),
"texture": Color(0.64, 0.64, 0.96, 1),
"textureGather": Color(0.64, 0.64, 0.96, 1),
"textureGrad": Color(0.64, 0.64, 0.96, 1),
"textureLod": Color(0.64, 0.64, 0.96, 1),
"textureProj": Color(0.64, 0.64, 0.96, 1),
"textureProjGrad": Color(0.64, 0.64, 0.96, 1),
"textureProjLod": Color(0.64, 0.64, 0.96, 1),
"textureQueryLevels": Color(0.64, 0.64, 0.96, 1),
"textureQueryLod": Color(0.64, 0.64, 0.96, 1),
"textureSize": Color(0.64, 0.64, 0.96, 1),
"transpose": Color(0.64, 0.64, 0.96, 1),
"true": Color(1, 0.44, 0.52, 1),
"trunc": Color(0.64, 0.64, 0.96, 1),
"uaddCarry": Color(0.64, 0.64, 0.96, 1),
"uint": Color(1, 0.440001, 0.52, 1),
"uintBitsToFloat": Color(0.64, 0.64, 0.96, 1),
"umulExtended": Color(0.64, 0.64, 0.96, 1),
"uniform": Color(1, 0.44, 0.52, 1),
"unpackHalf2x16": Color(0.64, 0.64, 0.96, 1),
"unpackSnorm2x16": Color(0.64, 0.64, 0.96, 1),
"unpackSnorm4x8": Color(0.64, 0.64, 0.96, 1),
"unpackUnorm2x16": Color(0.64, 0.64, 0.96, 1),
"unpackUnorm4x8": Color(0.64, 0.64, 0.96, 1),
"usampler2D": Color(1, 0.440001, 0.52, 1),
"usampler2DArray": Color(1, 0.440001, 0.52, 1),
"usampler3D": Color(1, 0.440001, 0.52, 1),
"usubBorrow": Color(0.64, 0.64, 0.96, 1),
"uvec2": Color(1, 0.440001, 0.52, 1),
"uvec3": Color(1, 0.440001, 0.52, 1),
"uvec4": Color(1, 0.440001, 0.52, 1),
"vec2": Color(1, 0.440001, 0.52, 1),
"vec3": Color(1, 0.440001, 0.52, 1),
"vec4": Color(1, 0.440001, 0.52, 1),
"void": Color(1, 0.440001, 0.52, 1),
"while": Color(1, 0.55, 0.8, 1)
}
color_regions = {
"\" \"": Color(1, 0.929412, 0.631373, 1),
"#": Color(1, 0.55, 0.8, 1),
"&\" \"": Color(1, 0.760784, 0.65098, 1),
"' '": Color(1, 0.929412, 0.631373, 1),
"//": Color(0.803922, 0.811765, 0.823529, 0.501961),
"^\" \"": Color(0.721569, 0.768627, 0.490196, 1)
}
